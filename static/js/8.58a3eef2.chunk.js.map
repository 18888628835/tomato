{"version":3,"sources":["components/header/svg.tsx","components/header/Header.tsx","components/main/main.tsx","components/custom/actionType.tsx","components/main/task_description.tsx","components/main/todo_list.tsx","components/header/UserMenu.tsx","components/custom/reducer.tsx","components/custom/useTodo.tsx","components/custom/close-wrapper.tsx","components/main/tomatoAction.tsx","components/main/tomato_list.tsx","components/main/tomatoes.tsx","components/main/ statistics.tsx","components/custom/useTomato.tsx","pages/Index.tsx","components/config/axiosConfig.ts"],"names":["Div","styled","div","Svg","props","className","aria-hidden","xlinkHref","iconName","Wrapper","header","Header","React","memo","children","Wrap","main","Main","ADD_TASK","UPDATE_TASK","SET_DESCRIPTION","SET_EDIT","Task_description","description","dispatch","onAddTask","placeholder","onChange","e","type","formData","target","value","onKeyUp","key","suffix","EnterOutlined","onClick","Panel","Collapse","getUnDeleted","data","filter","d","deleted","getUnCompleted","completed","getCompleted","Todo_list","todoList","onUpdateTask","edit","map","item","checked","id","onDoubleClick","autoFocus","defaultValue","onBlur","style","cursor","color","DeleteOutlined","margin","border","background","defaultActiveKey","ghost","UserMenu","history","useHistory","menu","Item","localStorage","setItem","push","user","to","overlay","DownOutlined","initialState","reducer","state","action","useTodo","useReducer","a","ajax","post","then","error","console","log","response","resource","params","put","newList","getTodoList","get","resources","CloseWrapper","title","onConfirm","finishTomato","aborted","message","success","okText","cancelText","CloseCircleOutlined","TomatoAction","seconds","min","useState","Math","floor","time","setState","percent","duration","timer","useRef","useEffect","current","setTimeout","getUnFinishTomato","clearTimeout","width","height","section","TomatoList","finishedGroup","messageArray","length","startTime","endTime","Tomatoes","html","startTomatoes","unFinishTomato","setUnFinishTomato","undefined","block","startedAt","Date","parse","started_at","timeNow","getTime","bordered","onPressEnter","Section","Statistics","nowMonth","dayjs","finishTodo","todo","monthFinishTomatoes","finishedTomatoes","tomato","ended_at","month","list","array","index","name","useTomato","tomatoes","setTomatoes","getFinishedTomatoes","t","created_at","format","endDate","Array","from","hashMap","Map","forEach","has","set","getFinishedGroup","unFinish","toISOString","Error","Index","setUser","getUserName","account","alert","axios","create","baseURL","headers","interceptors","request","use","config","xToken","getItem","Promise","reject"],"mappings":"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","file":"static/js/8.58a3eef2.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nconst Div = styled.div`\n  > svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\nexport const Svg: FC<{ iconName: string }> = (props) => {\n  return (\n    <Div>\n      <svg className=\"icon\" aria-hidden=\"true\">\n        <use xlinkHref={`#icon-${props.iconName}`}></use>\n      </svg>\n    </Div>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Svg } from \"./svg\";\nconst Wrapper = styled.header`\n  padding: 0 64px;\n  display: flex;\n  justify-content: space-between;\n  height: 40px;\n  border-bottom: 1px solid #eeeeee;\n  .userMenu {\n    display: flex;\n    align-items: center;\n  }\n  .logo {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .loginOut {\n    border: 1px solid red;\n  }\n`;\nconst Header: FC = React.memo((props) => {\n  return (\n    <Wrapper>\n      <div className=\"logo\">\n        <Svg iconName=\"fanqie\" />\n        番茄闹钟\n      </div>\n      {props.children}\n    </Wrapper>\n  );\n});\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Wrap = styled.main`\n  overflow: hidden;\n  display: flex;\n  padding: 20px;\n  justify-content: space-around;\n  @media (max-width: 600px) {\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  > div {\n    overflow: hidden;\n    border: 1px solid #3333;\n    border-radius: 10px;\n    padding: 20px;\n    @media (max-width: 600px) {\n      flex: 1;\n    }\n    @media (min-width: 600px) {\n      width: calc(50% - 8px);\n    }\n\n    margin-bottom: 10px;\n  }\n`;\nconst Main = React.memo((props: { children: React.ReactNode }) => {\n  return <Wrap>{props.children}</Wrap>;\n});\n\nexport default Main;\n","export const ADD_TASK = \"ADD_TASK\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\nexport const SET_DESCRIPTION = \"SET_DESCRIPTION\";\nexport const SET_EDIT = \"SET_EDIT\";\n","import React, { FC } from \"react\";\nimport { Input } from \"antd\";\nimport { EnterOutlined } from \"@ant-design/icons\";\nimport { SET_DESCRIPTION } from \"../custom/actionType\";\nimport { ParamsDispatch } from \"../config/type\";\ntype P = {\n  description: string;\n  dispatch: (params: ParamsDispatch) => void;\n  onAddTask: () => void;\n};\nconst Task_description: FC<P> = React.memo((props) => {\n  const { description, dispatch, onAddTask } = props;\n  return (\n    <>\n      <Input\n        placeholder=\"新增任务\"\n        onChange={(e) => {\n          dispatch({ type: SET_DESCRIPTION, formData: e.target.value });\n        }}\n        onKeyUp={(e) => {\n          if (e.key === \"Enter\") {\n            onAddTask();\n          }\n        }}\n        value={description}\n        suffix={<EnterOutlined onClick={() => onAddTask()} />}\n      />\n    </>\n  );\n});\n\nexport default Task_description;\n","import React, { FC } from \"react\";\nimport { Checkbox, Collapse } from \"antd\";\nimport styled from \"styled-components\";\nimport { DeleteOutlined, EnterOutlined } from \"@ant-design/icons\";\nimport { SET_EDIT } from \"../custom/actionType\";\nimport { ParamsDispatch } from \"../config/type\";\nconst { Panel } = Collapse;\nconst Wrapper = styled.div`\n  overflow-y: auto;\n  max-height: 445px;\n  overflow-x: hidden;\n  > div {\n    display: flex;\n    border-bottom: 1px solid #3333;\n    padding: 8px 0;\n    &:hover {\n      background-color: #fff3d2;\n    }\n    .describe {\n      margin-left: 16px;\n    }\n    .input {\n      border: 0;\n      height: 20px;\n      outline: none;\n      background-color: transparent;\n      color: grey;\n    }\n  }\n  .centerLine {\n    text-decoration: line-through;\n    color: gainsboro;\n  }\n`;\ntype P = {\n  todoList: any[];\n  onUpdateTask: (id: number, params: unknown) => void;\n  edit: number[];\n  dispatch: (params: ParamsDispatch) => void;\n};\nconst getUnDeleted = (data: any[]) => {\n  return data.filter((d) => {\n    return d.deleted === false;\n  });\n};\nconst getUnCompleted = (data: any[]) => {\n  return getUnDeleted(data).filter((d) => {\n    return d.completed === false;\n  });\n};\nconst getCompleted = (data: any[]) => {\n  return getUnDeleted(data).filter((d) => {\n    return d.completed === true;\n  });\n};\n\nconst Todo_list: FC<P> = React.memo((props) => {\n  const { todoList, onUpdateTask, dispatch, edit } = props;\n  const editInput = (description: string, id: number) => {\n    return (\n      <>\n        <input\n          className=\"input\"\n          autoFocus\n          defaultValue={description}\n          onKeyUp={(e: React.KeyboardEvent) => {\n            if (e.key === \"Enter\") {\n              onUpdateTask(id, {\n                description: (e.target as HTMLInputElement).value,\n              });\n              dispatch({ type: SET_EDIT, formData: [] });\n            }\n          }}\n          onBlur={(e) => {\n            onUpdateTask(id, { description: e.target.value });\n          }}\n        />\n        <span>\n          <EnterOutlined\n            style={{ cursor: \"pointer\", color: \"grey\" }}\n            onClick={(e) => {\n              dispatch({ type: SET_EDIT, formData: [] });\n            }}\n          />\n          <DeleteOutlined\n            style={{ color: \"grey\", margin: \"0 10px\" }}\n            onClick={() => {\n              onUpdateTask(id, { deleted: true });\n            }}\n          />\n        </span>\n      </>\n    );\n  };\n  const data = (todoList: any[]) => {\n    return todoList.map((item) => {\n      return (\n        <div\n          key={item.id}\n          className={item.completed === true ? \"centerLine\" : \"\"}\n        >\n          <Checkbox\n            checked={item.completed}\n            onChange={(e) => {\n              onUpdateTask(item.id, { completed: e.target.checked });\n            }}\n          />\n          <span\n            className=\"describe\"\n            onDoubleClick={() => {\n              dispatch({ type: SET_EDIT, formData: [item.id] });\n            }}\n          >\n            {edit[0] === item.id\n              ? editInput(item.description, item.id)\n              : item.description}\n          </span>\n        </div>\n      );\n    });\n  };\n  return (\n    <Wrapper>\n      {data(getUnCompleted(todoList))}\n      <Collapse\n        style={{ border: \"none\", background: \"none\" }}\n        defaultActiveKey={[\"1\"]}\n        ghost={true}\n      >\n        <Panel header=\"最近完成的\" key=\"1\">\n          {data(getCompleted(todoList))}\n        </Panel>\n      </Collapse>\n    </Wrapper>\n  );\n});\n\nexport default Todo_list;\n","import { Button, Menu, Dropdown } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport React, { FC } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\ntype P = {\n  user: string;\n  className: string;\n};\n\nconst UserMenu: FC<P> = React.memo((props) => {\n  const history = useHistory();\n  const menu = (\n    <Menu>\n      <Menu.Item\n        onClick={() => {\n          localStorage.setItem(\"x-token\", \"\");\n          history.push(\"/\");\n        }}\n      >\n        <span>注销</span>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <div className={props.className}>\n      {props.user === \"\" ? (\n        <Button>\n          <Link to=\"/\">登录</Link>\n        </Button>\n      ) : (\n        <Dropdown overlay={menu}>\n          <span className=\"ant-dropdown-link\">\n            {props.user} <DownOutlined />\n          </span>\n        </Dropdown>\n      )}\n    </div>\n  );\n});\n\nexport default UserMenu;\n","import { ADD_TASK, UPDATE_TASK, SET_DESCRIPTION, SET_EDIT } from \"./actionType\";\ntype Todo = {\n  edit: number[];\n  todoList: number[];\n  description: string;\n};\nexport const initialState: Todo = {\n  edit: [],\n  todoList: [],\n  description: \"\",\n};\nexport const reducer = (\n  state: any,\n  action: { type: string; formData: any }\n) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return { ...state, todoList: action.formData };\n    case UPDATE_TASK:\n      return { ...state, todoList: action.formData };\n    case SET_DESCRIPTION:\n      return { ...state, description: action.formData };\n    case SET_EDIT:\n      return { ...state, edit: action.formData };\n    default:\n      break;\n  }\n};\n","import { useReducer } from \"react\";\nimport ajax from \"../config/axiosConfig\";\nimport { reducer, initialState } from \"./reducer\";\nimport { ADD_TASK, UPDATE_TASK, SET_DESCRIPTION } from \"../custom/actionType\";\n\nconst useTodo = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { edit, todoList, description } = state;\n  /**\n   * getUserName用来获取用户姓名\n   * getTodoList用来获取任务列表\n   * onAddTask用来向服务器提交任务\n   * onUpdateTask就是修改任务的各种情况\n   */\n  const onAddTask = async () => {\n    const response = await ajax\n      .post(\"todos\", {\n        description: description,\n      })\n      .then(null, (error) => console.log(error));\n    if (response) {\n      console.log(response);\n      dispatch({\n        type: ADD_TASK,\n        formData: [response.data.resource, ...todoList],\n      });\n      dispatch({\n        type: SET_DESCRIPTION,\n        formData: \"\",\n      });\n    }\n  };\n  const onUpdateTask = async (id: number, params: unknown) => {\n    const response = await ajax.put(`todos/${id}`, params);\n    const newList = todoList.map((item: any) => {\n      if (item.id === id) {\n        return response.data.resource;\n      }\n      return item;\n    });\n    dispatch({ type: UPDATE_TASK, formData: newList });\n  };\n  const getTodoList = async () => {\n    const response = await ajax\n      .get(\"todos\")\n      .then(null, (error) => console.log(error));\n    if (response) {\n      dispatch({ type: UPDATE_TASK, formData: response.data.resources });\n    }\n  };\n  return {\n    getTodoList,\n    onAddTask,\n    edit,\n    todoList,\n    description,\n    dispatch,\n    onUpdateTask,\n  };\n};\n\nexport default useTodo;\n","import React, { FC } from \"react\";\nimport { message, Popconfirm } from \"antd\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nconst Div = styled.div`\n  width: 100%;\n  border: 1px solid #d9d9d9;\n  padding: 4px 11px;\n  text-align: center;\n  position: relative;\n  .closeIcon {\n    display: block;\n    position: absolute;\n    right: -5px;\n    top: -5px;\n    background-color: white;\n  }\n  .progress {\n    background-color: #d9d9d9;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: -1;\n  }\n`;\nconst CloseWrapper: FC<{ finishTomato: (params: any) => void }> = (props) => {\n  return (\n    <Div>\n      <Popconfirm\n        title=\"确定要删除这个番茄吗?\"\n        onConfirm={() => {\n          props.finishTomato({ aborted: true });\n          message.success(\"删除成功\");\n        }}\n        okText=\"删除\"\n        cancelText=\"撤销\"\n      >\n        <CloseCircleOutlined className=\"closeIcon\" />\n      </Popconfirm>\n      {props.children}\n    </Div>\n  );\n};\n\nexport default CloseWrapper;\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { Params } from \"../config/type\";\nimport CloseWrapper from \"../custom/close-wrapper\";\n\ntype P = {\n  time: number;\n  getUnFinishTomato: () => void;\n  duration: number;\n  finishTomato: (params: Params) => void;\n};\nconst TomatoAction: FC<P> = React.memo((props) => {\n  const [state, setState] = useState(Math.floor(props.time));\n  let seconds, min, title;\n  seconds = Math.floor((state / 1000) % 60);\n  min = Math.floor(state / 1000 / 60);\n  title = `${min < 10 ? `0${min}` : min}:${\n    seconds < 10 ? `0${seconds}` : seconds\n  }`;\n  const percent = (1 - state / props.duration) * 100;\n  const timer: any = useRef(null);\n  useEffect(() => {\n    timer.current = setTimeout(() => {\n      if (state > 0) {\n        setState(state - 1000);\n      } else {\n        props.getUnFinishTomato();\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  });\n  return (\n    <CloseWrapper finishTomato={props.finishTomato}>\n      <div\n        className=\"progress\"\n        style={{ width: `${percent}%`, height: \"31px\" }}\n      ></div>\n      <span>{title}</span>\n    </CloseWrapper>\n  );\n});\n\nexport default TomatoAction;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\ntype P = {\n  finishedGroup: any[];\n};\nconst Wrapper = styled.section`\n  padding: 15px;\n  .tomato_title {\n    display: flex;\n    justify-content: space-between;\n    > span:nth-child(1) {\n      color: #999999;\n      font-size: 16px;\n    }\n    > span:nth-child(2) {\n      color: #666666;\n      font-size: 12px;\n    }\n  }\n  .tomato_list {\n    > li {\n      display: flex;\n      > span:nth-child(1) {\n        color: #999999;\n        font-size: 14px;\n        margin-right: 15px;\n      }\n    }\n  }\n`;\nconst TomatoList: FC<P> = React.memo((props) => {\n  return (\n    <Wrapper>\n      {props.finishedGroup.map(([time, messageArray]) => {\n        return (\n          <div key={time}>\n            <div className=\"tomato_title\">\n              <span>{time}</span>\n              <span>本日完成{messageArray.length}个番茄</span>\n            </div>\n            <ul className=\"tomato_list\">\n              {messageArray.map((message: any) => {\n                return (\n                  <li key={message.id}>\n                    <span>\n                      {message.startTime}-{message.endTime}\n                    </span>\n                    <span>\n                      {message.description ? message.description : \"没有描述  \"}\n                    </span>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      })}\n    </Wrapper>\n  );\n});\n\nexport default TomatoList;\n","import { Button, Divider, Input } from \"antd\";\nimport React, { FC, useEffect } from \"react\";\nimport TomatoAction from \"./tomatoAction\";\nimport CloseWrapper from \"../custom/close-wrapper\";\nimport TomatoList from \"./tomato_list\";\nimport { Params } from \"../config/type\";\ntype P = {\n  startTomatoes: () => void;\n  getUnFinishTomato: () => void;\n  unFinishTomato: { [key: string]: any };\n  setUnFinishTomato: (params: { [key: string]: any }) => void;\n  finishedGroup: [any, any][];\n  finishTomato: (params: Params) => void;\n};\nconst Tomatoes: FC<P> = React.memo((props) => {\n  let html;\n  const {\n    startTomatoes,\n    getUnFinishTomato,\n    unFinishTomato,\n    setUnFinishTomato,\n    finishedGroup,\n    finishTomato,\n  } = props;\n  useEffect(() => {\n    getUnFinishTomato(); //第一次的时候就获取未完成的番茄，找到没有完成的番茄闹钟\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (unFinishTomato === undefined) {\n    html = (\n      <Button\n        block={true}\n        onClick={() => {\n          startTomatoes();\n        }}\n      >\n        开始番茄\n      </Button>\n    );\n  } else {\n    const startedAt = Date.parse(unFinishTomato.started_at);\n    const duration = unFinishTomato.duration;\n    const timeNow = new Date().getTime();\n    console.log(startedAt);\n\n    if (timeNow - startedAt > duration) {\n      html = (\n        <CloseWrapper finishTomato={finishTomato}>\n          <Input\n            bordered={false}\n            placeholder=\"请输入你刚刚完成的任务\"\n            value={unFinishTomato.description}\n            onChange={(e) => {\n              setUnFinishTomato({\n                ...unFinishTomato,\n                description: e.target.value,\n              });\n            }}\n            onPressEnter={() => {\n              finishTomato({\n                description: unFinishTomato.description,\n              });\n            }}\n          />\n        </CloseWrapper>\n      );\n    } else if (timeNow - startedAt < duration) {\n      const time = startedAt + duration - timeNow; //还剩下多少ms\n      html = (\n        <TomatoAction\n          time={time}\n          duration={duration}\n          getUnFinishTomato={getUnFinishTomato}\n          finishTomato={finishTomato}\n        />\n      );\n    }\n  }\n  return (\n    <>\n      {html}\n      <Divider />\n      {props.children}\n      <TomatoList {...{ finishedGroup }} />\n    </>\n  );\n});\n\nexport default Tomatoes;\n","import dayjs from \"dayjs\";\nimport React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst Section = styled.section`\n  li {\n    list-style: none;\n  }\n  padding: 20px;\n  .history {\n    background-color: #d6d6d6;\n    text-align: center;\n  }\n  .hide {\n    display: none;\n  }\n  .show {\n    display: block;\n  }\n  > ul {\n    display: flex;\n    > li {\n      :hover {\n        background-color: #f0eeee;\n      }\n      padding: 16px 24px;\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      color: #666666;\n      border: 1px solid #e9e9e9;\n      > span:nth-child(2) {\n        color: #999999;\n      }\n      > span:nth-child(3) {\n        font-size: 30px;\n      }\n    }\n  }\n`;\ntype P = {\n  finishedTomatoes: any[];\n  todoList: any[];\n  tomatoes: any[];\n};\nconst Statistics: FC<P> = React.memo((props) => {\n  const nowMonth = dayjs().get(\"month\");\n  const finishTodo = props.todoList.filter((todo) => {\n    return todo.completed && todo.deleted !== true;\n  });\n\n  const monthFinishTomatoes = props.finishedTomatoes.filter((tomato) => {\n    return dayjs(tomato.ended_at).month() === nowMonth;\n  });\n  const list = [\n    [\"统计历史\", nowMonth + 1 + \"月累积\", monthFinishTomatoes.length],\n    [\"番茄历史\", \"完成番茄\", props.finishedTomatoes.length],\n    [\"任务历史\", \"完成任务\", finishTodo.length],\n  ];\n  return (\n    <Section>\n      <ul>\n        {list.map((array, index) => {\n          return (\n            <li key={array[0]} onClick={() => {}}>\n              {array.map((name) => {\n                return <span key={name}>{name}</span>;\n              })}\n            </li>\n          );\n        })}\n      </ul>\n    </Section>\n  );\n});\n\nexport default Statistics;\n","import { useState } from \"react\";\nimport ajax from \"../config/axiosConfig\";\nimport { Params } from \"../config/type\";\nimport dayjs from \"dayjs\";\nconst useTomato = () => {\n  const [tomatoes, setTomatoes] = useState([]);\n  const [unFinishTomato, setUnFinishTomato] = useState<any>({});\n  const getFinishedTomatoes = (tomatoes: any[]) => {\n    return tomatoes.filter(\n      (t) => t.ended_at !== null && t.description !== \"\" && t.aborted !== true\n    );\n  };\n  const getFinishedGroup = (finishedTomatoes: any[]) => {\n    const hashMap = new Map();\n    finishedTomatoes.forEach((t) => {\n      if (!hashMap.has(t.endDate)) {\n        hashMap.set(t.endDate, [t]);\n      } else {\n        hashMap.get(t.endDate).push(t);\n      }\n    });\n    return hashMap;\n  };\n  const finishedTomatoes = getFinishedTomatoes(tomatoes).map((t) => {\n    t.startTime = dayjs(t.created_at).format(\"HH:mm\");\n    t.endTime = dayjs(t.ended_at).format(\"HH:mm\");\n    t.endDate = dayjs(t.ended_at).format(\"MM月DD日\");\n    return t;\n  });\n  const finishedGroup = Array.from(getFinishedGroup(finishedTomatoes));\n  const getUnFinishTomato = async () => {\n    try {\n      const response = await ajax.get(\"tomatoes\");\n      setTomatoes(response.data.resources);\n      const unFinish = response.data.resources.filter((t: any) => {\n        return !t.description && !t.ended_at && !t.aborted;\n      })[0];\n      setUnFinishTomato(unFinish);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const finishTomato = async (params: Params) => {\n    await ajax\n      .put(`tomatoes/${unFinishTomato.id}`, {\n        ...params,\n        ended_at: new Date().toISOString(),\n      })\n      .then(null, (error) => {\n        throw new Error(error);\n      });\n    getUnFinishTomato();\n  };\n  const startTomatoes = async () => {\n    await ajax.post(\"tomatoes\", { duration: 1500000 }).then(null, (error) => {\n      throw new Error(error);\n    });\n    getUnFinishTomato();\n  };\n\n  return {\n    setTomatoes,\n    startTomatoes,\n    getUnFinishTomato,\n    tomatoes,\n    unFinishTomato,\n    getFinishedTomatoes,\n    setUnFinishTomato,\n    finishedTomatoes,\n    finishedGroup,\n    finishTomato,\n  };\n};\n\nexport default useTomato;\n","import React, { useEffect, useState } from \"react\";\nimport ajax from \"../components/config/axiosConfig\";\nimport Header from \"../components/header/Header\";\nimport Main from \"../components/main/main\";\nimport TaskDescription from \"../components/main/task_description\";\nimport TodoList from \"../components/main/todo_list\";\nimport UserMenu from \"../components/header/UserMenu\";\nimport useTodo from \"../components/custom/useTodo\";\nimport Tomatoes from \"../components/main/tomatoes\";\nimport { Divider } from \"antd\";\nimport Statistics from \"../components/main/ statistics\";\nimport useTomato from \"../components/custom/useTomato\";\nconst Index = () => {\n  const [user, setUser] = useState<string>(\"\");\n  const {\n    edit,\n    todoList,\n    description,\n    dispatch,\n    getTodoList,\n    onAddTask,\n    onUpdateTask,\n  } = useTodo();\n  const {\n    startTomatoes,\n    getUnFinishTomato,\n    unFinishTomato,\n    setUnFinishTomato,\n    finishedGroup,\n    finishTomato,\n    finishedTomatoes,\n    tomatoes,\n  } = useTomato();\n  useEffect(() => {\n    getUserName();\n    getTodoList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getUserName = async () => {\n    try {\n      const response = await ajax(\"/me\");\n      await setUser(response.data.account);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <UserMenu className=\"userMenu\" {...{ user }} />\n      </Header>\n      <Main>\n        <div>\n          <Tomatoes\n            {...{\n              startTomatoes,\n              getUnFinishTomato,\n              unFinishTomato,\n              setUnFinishTomato,\n              finishedGroup,\n              finishTomato,\n            }}\n          />\n        </div>\n        <div>\n          <TaskDescription {...{ description, dispatch, onAddTask }} />\n          <Divider />\n          <TodoList {...{ todoList, onUpdateTask, edit, dispatch }}></TodoList>\n        </div>\n      </Main>\n      <Statistics {...{ finishedTomatoes, todoList, tomatoes }}></Statistics>\n    </>\n  );\n};\n\nexport default Index;\n","import axios from \"axios\";\nconst appID = \"23428m5P3TFxUWgDpjgfAkNo\";\nconst appSecret = \"7sSqdQDvUrGrBTBi7FDCeevi\";\n\nconst ajax = axios.create({\n  baseURL: \"https://gp-server.hunger-valley.com/\",\n  headers: {\n    \"t-app-id\": appID,\n    \"t-app-secret\": appSecret,\n  },\n});\n\n// Add a request interceptor\najax.interceptors.request.use(\n  function (config) {\n    const xToken = localStorage.getItem(\"x-token\");\n    if (xToken) {\n      config.headers[\"Authorization\"] = `Bearer ${xToken}`;\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\najax.interceptors.response.use(\n  function (response) {\n    // Do something with response data\n    if (response.headers[\"x-token\"]) {\n      localStorage.setItem(\"x-token\", response.headers[\"x-token\"]);\n    }\n    return response;\n  },\n  function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\nexport default ajax;\n"],"sourceRoot":""}